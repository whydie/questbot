"""
Django settings for tgBot project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# TODO: Change to False before pushing to prod
DEBUG = True

# if DEBUG:
#     LOGGING = {
#         'version': 1,
#         'disable_existing_loggers': False,
#         'handlers': {
#             'console': {
#                 'level': 'DEBUG',
#                 'class': 'logging.StreamHandler',
#             }
#         },
#         'loggers': {
#             'django.db.backends': {
#                 'handlers': ['console'],
#                 'level': 'DEBUG',
#             },
#         }
#     }
#     CACHES = {
#         'default': {
#             'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
#         }
#     }

ALLOWED_HOSTS = ["*"]

SITE_URL = "http://91.245.226.181"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Custom apps
    "questApp",
    # "payment",
    "player",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "tgBot.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "tgBot.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

if DEBUG:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "tgquest",
            "USER": "questbot",
            "PASSWORD": os.environ.get("POSTGRESQL_DB_PASSWORD"),
            "HOST": "localhost",
            "PORT": "",
        }
    }

    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.memcached.MemcachedCache",
            "LOCATION": "127.0.0.1:11211",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "ru-RU"

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATIC_URL = "/static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media/")
MEDIA_URL = "/media/"

# Telegram-bot
BOT_TG_ID = "@"

# Telegram API
TG_PROXY_URL = ""
if DEBUG:
    BOT_TG_ID += "Quest_teshyu_bot"
    TG_ACCESS_TOKEN = os.environ.get("TG_ACCESS_TOKEN")
    TG_PROXY_URL = "http://64.225.24.13:3128"
    VK_ACCESS_TOKEN = os.environ.get("VK_ACCESS_TOKEN")
    VK_GROUP_ID = "130703093"
else:
    BOT_TG_ID += "indecent_quests_bot"
    TG_ACCESS_TOKEN = os.environ.get("TG_ACCESS_TOKEN")
    VK_ACCESS_TOKEN = os.environ.get("VK_ACCESS_TOKEN")
    VK_GROUP_ID = "164636367"

TG_JOIN_URL = "https://teleg.run/"

MAIN_MENU_TEXT = "Главное меню" + "\n"

GAME_WIN_TEXT = 'Вы победили! Чтобы с вами можно было связаться, задайте контакт для связи в меню "🛠️ Настройки"'
GAME_LOST_TEXT = "Вы проиграли."

CACHING_TIMEOUTS = {
    "STEP": {"TIMEOUT": 60 * 5},
    "OPTION": {"TIMEOUT": 60 * 5},
    "QUEST": {"TIMEOUT": 60 * 5},
    "PLAYER_QUEST": {"TIMEOUT": 60 * 5},
    "PLAYER": {"TIMEOUT": 60 * 5},
}


BOT_MENU = {
    "MY_GAMES": {"EMOJI": "🎮", "TEXT": "Мои квесты"},
    "BUY_ATTEMPTS": {"EMOJI": "💰"},
    "ALL_GAMES": {"EMOJI": "🎲", "TEXT": "Все квесты"},
    "MAIN_MENU": {"EMOJI": "⚽", "TEXT": "Главное меню"},
    "ASK_TO_RESTART": {"EMOJI": "♻️", "TEXT": "Начать заново"},
    "CONFIRM_TO_RESTART": {"EMOJI": "♻️", "TEXT": "Да, начать заново"},
    "RETURN_TO_GAME": {"EMOJI": "⏪", "TEXT": "Вернуться в игру"},
    "START_WO_REFERRER": {"EMOJI": "⏩", "TEXT": "Пропустить"},
    "START_GAME": {"EMOJI": "🏁", "TEXT": "Начать игру"},
    "SETTINGS": {"EMOJI": "🛠️", "TEXT": "Настройки"},
    "CANCEL_CONTACT": {"EMOJI": "❌", "TEXT": "Отменить контакт"},
    "ADD_CONTACT": {"EMOJI": "📱", "TEXT": "Добавить контакт"},
    "GAME": {"EMOJI": "♟️"},
}
